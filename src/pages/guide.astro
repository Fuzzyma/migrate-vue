---
import Container from "@components/container.astro";
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import GuideNavigation from "@components/GuideNavigation.astro";

// Fetch all markdown files from the 'guide' collection
const guides = await getCollection("guide");

// github.com/rezahedi/rezahedi.dev/blob/main/src/components/TOC.astro
function buildHierarchy(headings: any) {
  const toc: any[] = [];
  const parentHeadings = new Map();

  if (!headings) return toc;

  headings.forEach((h: any) => {
    const heading = { ...h, subheadings: [] };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 3) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
// Sort guides by title
const sortedGuides = await Promise.all(
  guides
    .sort((a, b) => a.data.title.localeCompare(b.data.title))
    .map(async (guide) => {
      const compiled = await guide.render();
      return {
        ...guide,
        compiled,
        headings: buildHierarchy(compiled.headings),
      };
    }),
);

const allHeadings = sortedGuides.map((guide) => ({
  depths: 2,
  slug: guide.slug,
  text: guide.data.title,
  subheadings: guide.headings,
}));
---

<Layout title="Migration Guide">
  <Container class="flex flex-row-reverse">
    <nav class="w-48 bg-white p-5 border-l border-gray-200">
      <GuideNavigation headings={allHeadings} />
      <ul>
        {
          sortedGuides.map((guide) => (
            <li class="my-2">
              <a
                href={`#${guide.slug}`}
                class={`block text-black hover:text-blue-500`}>
                {guide.data.title}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>

    <main class="ml-auto mr-56">
      {
        sortedGuides.map(({ data, compiled, slug }) => (
          <section id={slug} class="py-10 guide-section">
            <h2 class="text-2xl font-bold mb-4">{data.title}</h2>
            <div class="prose">
              <compiled.Content />
            </div>
          </section>
        ))
      }
    </main>
  </Container>
</Layout>

<script is:inline>
  let current;

  const updateCurrentSection = () => {
    const sections = document.querySelectorAll(".guide-section");

    sections.forEach((section) => {
      const sectionTop = section.offsetTop - 50; // Adjust based on your layout
      if (window.scrollY >= sectionTop) {
        if (current != section) {
          current.classList.remove("font-bold", "text-blue-600");

          section.classList.add("font-bold", "text-blue-600");

          current = section;
        }
      }
    });
  };

  window.addEventListener("scroll", updateCurrentSection);
  //   window.removeEventListener("scroll", updateCurrentSection);
</script>
